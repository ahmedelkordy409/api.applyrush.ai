version: '3.8'

services:
  # JobHire.AI Backend API Server
  jobhire-api:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: jobhire-api
    ports:
      - "8000:8000"
    environment:
      - APP_ENVIRONMENT=production
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DATABASE=jobhire_ai
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - JSEARCH_API_KEY=${JSEARCH_API_KEY}
      - RAPID_API_KEY=${RAPID_API_KEY}
      - ENABLE_METRICS=true
      - LOG_LEVEL=INFO
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - jobhire-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: jobhire-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=jobhire_ai
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - jobhire-network
    command: mongod --auth

  # Redis Cache and Queue
  redis:
    image: redis:7.2-alpine
    container_name: jobhire-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - jobhire-network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: jobhire-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - jobhire-api
    restart: unless-stopped
    networks:
      - jobhire-network

  # Prometheus Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: jobhire-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - jobhire-network

  # Grafana Dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: jobhire-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - jobhire-network

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  jobhire-network:
    driver: bridge